import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# Parameters
Lx = 10.0  # Length of the domain in the x-direction
Ly = 10.0  # Length of the domain in the y-direction
Nx = 100   # Number of grid points in the x-direction
Ny = 100   # Number of grid points in the y-direction
T = 1.0    # Total simulation time
kappa = 0.01  # Thermal diffusivity

# Discretization
dx = Lx / (Nx - 1)
dy = Ly / (Ny - 1)
dt = 0.001  # Time step

# Initialize temperature field
T0 = np.zeros((Nx, Ny))
T0[Nx//4:Nx//2, Ny//4:Ny//2] = 100.0  # Initial heat source

# Simulation loop
num_steps = int(T / dt)
for step in range(num_steps):
    T_new = np.copy(T0)
    for i in range(1, Nx - 1):
        for j in range(1, Ny - 1):
            T_new[i, j] = T0[i, j] + kappa * dt * (
                (T0[i+1, j] - 2*T0[i, j] + T0[i-1, j]) / dx**2 +
                (T0[i, j+1] - 2*T0[i, j] + T0[i, j-1]) / dy**2
            )
    T0 = T_new

    # Plot the temperature field at specific time steps
    if step % 100 == 0:
        plt.figure()
        plt.contourf(T0, cmap='viridis')
        plt.colorbar()
        plt.title(f'Time step {step}')
        plt.show()

# Final temperature field
plt.figure()
plt.contourf(T0, cmap='viridis')
plt.colorbar()
plt.title('Final Temperature Field')
plt.show()
